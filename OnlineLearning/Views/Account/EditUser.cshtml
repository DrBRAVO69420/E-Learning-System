@model OnlineLearning.Models.UserViewModel
@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_LayoutAfterLogin.cshtml";   
}
<style>
    .nav-pills > li.active > a, .nav-pills > li.active > a:hover, .nav-pills > li.active > a:focus {
        color: black;
        background-color: #eee;
    }

    .center-pills {
        display: flex;
        justify-content: center;
    }
</style>
<div class="w3-panel sectionHeading">
    <h3 class="text-indigo bolder">
        <i class="glyphicon glyphicon-user"></i> Edit User
    </h3>
</div>

<div class="row w3-hide-large" data-spy="affix" data-offset-top="100">
    <div class="container-fluid">
        <ul class="breadcrumb">
            <li><a class="breadcrumb-item @( ViewContext.RouteData.Values["Controller"].ToString() == "account" && ViewContext.RouteData.Values["Action"].ToString() == "manageuser" ? "active-breadcrumb-item" : "")" href="@Url.Action("manageuser","account")"> Manage Users</a></li>
            <li><a class="breadcrumb-item active-breadcrumb-item" href="#"> Edit User</a></li>
        </ul>
    </div>
</div>
<div class="row w3-hide-medium w3-hide-small padding-0">
    <ul class="breadcrumb">
        <li><a class="breadcrumb-item @( ViewContext.RouteData.Values["Controller"].ToString() == "account" && ViewContext.RouteData.Values["Action"].ToString() == "manageuser" ? "active-breadcrumb-item" : "")" href="@Url.Action("manageuser","account")"> Manage Users</a></li>
        <li><a class="breadcrumb-item active-breadcrumb-item" href="#"> Edit User</a></li>
    </ul>
</div>

<div class="row text-center padding-0">
    @Html.Partial("~/Views/Shared/_SuccessErrorMessage.cshtml")
</div>
<div class="row small-margin-top">
    <div class="w3-white w3-card">
        <div class="row" style="background-color: #f8f9fa ">
            <div class="col-md-12 text-center">
                <ul class="nav nav-pills center-pills" style="font-size:17px">
                    <li class="nav-item active" id="edituserdataTab">
                        <a class="text-indigo largePaddingLeftRight" data-toggle="pill" href="#edituserdata"><i class="glyphicon glyphicon-edit"></i> Edit User Data</a>
                    </li>
                    <li class="nav-item mediumPaddingLeftRight " id="resetpasswordTab">
                        <a class="text-indigo largePaddingLeftRight" data-toggle="pill" href="#resetpassword"><i class="glyphicon glyphicon-lock"></i> Reset Password</a>
                    </li>
                </ul>
            </div>
        </div>

        <div class="tab-content mediumPaddingLeftRight w3-padding-16">
            <div id="edituserdata" class="tab-pane fade in active">
                <h3 class="bolder text-center">EDIT USER DATA</h3>
                @using (Html.BeginForm("EditUser", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    if (Model.Role != "Admin")
                    {
                        <div class="row">
                            <div class="col-md-6">
                                <div class="row">
                                    @Html.LabelFor(m => m.UserRole, new { @class = "control-label required" })
                                </div>
                                <div class="row">
                                    @(Html.Kendo().DropDownList()
                                      .Name("UserRole")
                                      .OptionLabel("-Select User Type-")
                                      .DataTextField("Text")
                                      .DataValueField("Value")
                                      .Events(e => e.Change("changeUserIdLabel"))
                                      .BindTo(new List<SelectListItem>() {
                                          new SelectListItem() {
                                              Text = "Instructor",
                                              Value = "T"
                                          },
                                          new SelectListItem() {
                                              Text = "Student",
                                              Value = "S"
                                          }
                                      })
                                      .HtmlAttributes(new { style = "width: 100%" })
                                    )
                                </div>
                                <div class="row">
                                    @Html.ValidationMessageFor(m => m.UserRole, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="row">
                                    @Html.LabelFor(m => m.IntakeYear, new { @class = "control-label required" })
                                </div>
                                <div class="row">
                                    @Html.Kendo().NumericTextBoxFor(m => m.IntakeYear).Format("{0:0}").Spinners(false)
                                </div>
                                <div class="row">
                                    @Html.ValidationMessageFor(m => m.IntakeYear, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    }


                    <div class="row">
                        <div class="col-md-6">
                            <div class="row">
                                @Html.LabelFor(m => m.Username, new { @class = "control-label required" })
                            </div>
                            <div class="row">
                                @Html.Kendo().TextBoxFor(m => m.Username)
                            </div>
                            <div class="row">
                                @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="row">
                                @Html.LabelFor(m => m.Email, new { @class = "control-label required" })
                            </div>
                            <div class="row">
                                @Html.Kendo().TextBoxFor(m => m.Email)
                            </div>
                            <div class="row">
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="row">
                                @Html.LabelFor(m => m.Name, new { @class = "control-label required" })
                            </div>
                            <div class="row">
                                @Html.Kendo().TextBoxFor(m => m.Name)
                            </div>
                            <div class="row">
                                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="row">
                                @Html.LabelFor(m => m.Gender, new { @class = "control-label required" })
                            </div>
                            <div class="row">
                                @Html.Kendo().RadioButtonFor(m => m.Gender).Value("Male").Name("Gender").Label("Male")
                                @Html.Kendo().RadioButtonFor(m => m.Gender).Value("Female").Name("Gender").Label("Female")
                            </div>
                            <div class="row">
                                @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    if (Model.Role != "Admin")
                    {
                        <div class="row">
                            <div class="col-md-6">
                                <div class="row">
                                    @*@Html.LabelFor(m => m.Code, new { @class = "control-label required" })*@
                                    <label class="control-label" id="userCodeLabel">Instructor ID / Student ID</label>
                                </div>
                                <div class="row">
                                    @Html.Kendo().TextBoxFor(m => m.Code)
                                </div>
                                <div class="row">
                                    @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">

                            </div>
                        </div>
                    }


                    <div class="row text-center w3-padding-16">
                        <button class="button-indigo">Submit</button>
                    </div>
                }
            </div>
            <div id="resetpassword" class="tab-pane fade">
                <h3 class="bolder text-center">RESET PASSWORD</h3>
                <div class="row largePaddingLeftRight">
                    @using (Html.BeginForm("ResetPasswordForUser", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Email)
                        @Html.HiddenFor(m => m.Username)
                        @Html.HiddenFor(m => m.Gender)
                        @Html.HiddenFor(m => m.IntakeYear)
                        @Html.HiddenFor(m => m.Name)
                        @Html.HiddenFor(m => m.UserRole)
                        @Html.HiddenFor(m => m.Code)
                        <div class="row">
                            @Html.LabelFor(m => m.NewPassword, new { @class = "control-label required" })
                        </div>
                        <div class="row">
                            @Html.Kendo().TextBoxFor(m => m.NewPassword).HtmlAttributes(new { type = "password" })
                        </div>
                        <div class="row">
                            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="row">
                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label required" })
                        </div>
                        <div class="row">
                            @Html.Kendo().TextBoxFor(m => m.ConfirmPassword).HtmlAttributes(new { type = "password" })
                        </div>
                        <div class="row">
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="row text-center w3-padding-16">
                            <button class="button-indigo">Submit</button>
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>

</div>

<script>
    $(document).ready(function () {
        var userRole = $("#UserRole").data("kendoDropDownList").value();
        if (userRole == 'T') {
            $("#userCodeLabel").text("Instructor ID");
        }
        if (userRole == 'S') {
            $("#userCodeLabel").text("Student ID");
        }
        if (userRole == '') {
            $("#userCodeLabel").text("Instructor ID / Student ID");
        }
        console.log('@ViewBag.ResetPasswordActive' );
        if ('@ViewBag.ResetPasswordActive' == 'True') {
            $("#edituserdataTab").removeClass("active");
            $("#edituserdata").removeClass("active");
            $("#resetpasswordTab").addClass("active");
            $("#resetpassword").addClass("in");
            $("#resetpassword").addClass("active");

        }
          if ('@ViewBag.EditUserData' == 'True') {
               $("#resetpasswordTab").removeClass("active");
            $("#resetpassword").removeClass("active");
            $("#edituserdataTab").addClass("active");
            $("#edituserdata").addClass("in");
            $("#edituserdata").addClass("active");
        }

    });
    function changeUserIdLabel() {
        var userRole = $("#UserRole").data("kendoDropDownList").value();
        if (userRole == 'T') {
            $("#userCodeLabel").text("Instructor ID");
        }
        if (userRole == 'S') {
            $("#userCodeLabel").text("Student ID");
        }
        if (userRole == '') {
            $("#userCodeLabel").text("Instructor ID / Student ID");
        }
    }
</script>