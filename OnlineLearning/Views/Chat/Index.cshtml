
@{
    ViewBag.Title = "Search User";
    Layout = "~/Views/Shared/_LayoutAfterLogin.cshtml";
}

<h4 class="text-indigo bolder mediumPaddingTopBottom smallPaddingLeftRight" style="background-color:#f0f0f5;margin-bottom:0px;">
    <i class="glyphicon glyphicon-search "></i> Search User
</h4>

<div class="w3-white w3-card small-margin-top">
    <div class="row">
        @Html.Partial("~/Views/Shared/_SearchBarAndResetButton.cshtml", new ViewDataDictionary { { "GridId", "SearchUserGrid" }, { "SearchPlaceHolder", "Search Name" } })
    </div>
    <div class="row center-block" style="width:100%;">
        @(Html.Kendo().Grid<OnlineLearning.Models.UserViewModel>
            ()
            .Name("SearchUserGrid")
            .Columns(columns =>
            {
            columns.Template(@<text></text>).ClientTemplate("#=resColTemplate(data)#").Title("Student List").Media("(max-width: 420px)"); //display this layout when device's width less than 420px
columns.Bound(c => c.Id).Hidden();
columns.Bound(c => c.ProfilePic).Width(250).ClientTemplate("<div class='text-center'><a href='" +
Url.Action("profile", "account") +
"/#=data.Id#' target='_blank'><img src='/UploadedFiles/#=data.ProfilePic#' alt='#=data.ProfilePic#' class='w3-circle' style='width:45px'  ></a></div>").HeaderHtmlAttributes(new { style = "font-weight:bold; white-space:normal; overflow:visible;" }).Media("(min-width: 420px)");
columns.Bound(c => c.Name).HeaderHtmlAttributes(new { style = "font-weight:bold; white-space:normal; overflow:visible;" }).Media("(min-width: 420px)");
columns.Bound(c => c.Role).HeaderHtmlAttributes(new { style = "font-weight:bold; white-space:normal; overflow:visible;" }).Media("(min-width: 420px)");
columns.Command(command =>
{
command.Custom("Message").IconClass(" ").Text("<i class='glyphicon glyphicon-send' style='font-size:18px'></i>").Click("SendMessage").HtmlAttributes(new { style = "color:blue", title = "Send Message" });
}).Width(150).Title("Action").HeaderHtmlAttributes(new { style = "font-weight:bold; white-space:normal; overflow:visible;", @class = "actionColumn" }).HtmlAttributes(new { @class = "actionColumn" });

})
.Pageable()
.Sortable()
.NoRecords("<span class='text-danger bolder'>No Record</span>")
.Resizable(r => r.Columns(true))
.Scrollable()
.Filterable(filterable => filterable
.Extra(false)
.Operators(operators => operators
.ForString(str => str.Clear()
.Contains("Contains")
.IsEqualTo("Is equal to")
)
.ForDate(dt => dt.Clear()
.IsEqualTo("Is equal to")
.IsGreaterThan("Is after")
.IsLessThan("Is before")
)
.ForNumber(num => num.Clear().IsEqualTo("Is equal to").IsGreaterThan("Is greater than").IsLessThan("Is less than"))
)
)
.Pageable(pageable => pageable.ButtonCount(5).PageSizes(new List<object> { 5, 8, 10, 20, 30, 40, 50, "all" }))
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(8)
.Events(events => events.Error("error_handler")/*.Sync("sync_handler")*/)
.Model(model =>
{
model.Id(m => m.Id);
})
.Read(read => read.Action("Read_User", "Account"))
.Events(e => e.RequestEnd("onRequestEnd"))
)
.Events(e => e.DataBound("Grid_onDataBound('SearchUserGrid')"))
        )
    </div>
</div>

<!-- ---------------------- Responsive template for the table ---------------------- -->
<script id="responsive-column-template" type="text/x-kendo-template">
    @*<p class="col-template-val"><b><a class='link' href='/quiz/questionlist/#=Id#'>#=data.QuizTitle#</a></b></p>*@
    <p class="col-template-val">

        <a href='@Url.Action("profile","account")/#=data.UserId#' target='_blank'>
            <img src='/UploadedFiles/#=data.ProfilePic#' alt='#=data.ProfilePic#' class='w3-circle' style='width:25px'>
        </a>
        <span class="smallPaddingLeftRight">
            #=data.Name#
        </span>
    </p>

</script>


@section scripts {
    
    <!--Script references. -->
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        var resColTemplate = kendo.template($("#responsive-column-template").html());
        function SendMessage(e) {
             e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            location.href = "@Url.Action("message","chat",new { Id = ""})/" + dataItem.Id;
        }
        // 8.14 added the below to solve flickering bug when mouse on the send message button in the table
        $("#SearchUserGrid").kendoTooltip({
            filter: ".k-grid-Message",
            position: "auto",
            content: "Send Message"       
        });
    </script>
}
